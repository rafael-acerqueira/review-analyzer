name: Frontend CI

on:
  push:
    paths:
      - 'frontend/**'
  pull_request:
    paths:
      - 'frontend/**'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DATABASE_URL: postgresql+psycopg2://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
      API_URL: http://127.0.0.1:8000
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Install Playwright Browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Install wait-on globally
        run: npm install -g wait-on

      - name: Build Next.js app
        working-directory: frontend
        env:
          API_URL: http://127.0.0.1:8000
        run: npm run build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Run Alembic migrations
        working-directory: backend
        run: |
          . .venv/bin/activate
          alembic upgrade head

      - name: Start FastAPI backend
        working-directory: backend
        run: |
          . .venv/bin/activate
          python -m uvicorn app.main:app --host 127.0.0.1 --port 8000 --log-level debug > uvicorn.log 2>&1 &

      - name: Wait for FastAPI backend to be ready
        run: wait-on tcp:127.0.0.1:8000 --timeout 60000

      - name: Show environment DATABASE_URL
        run: echo $DATABASE_URL

      - name: Print API_URL used by Next.js
        run: echo $API_URL


      - name: Print FastAPI env
        working-directory: backend
        run: |
          . .venv/bin/activate
          python -c "import os; print('DATABASE_URL:', os.getenv('DATABASE_URL')); print('API_URL:', os.getenv('API_URL'))"

      - name: Start Next.js app
        working-directory: frontend
        env:
          API_URL: http://127.0.0.1:8000
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: npm start &

      - name: Wait for Next.js to be ready
        run: wait-on http://localhost:3000 --timeout 60000

      - name: Run Playwright tests
        working-directory: frontend
        env:
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        run: npx playwright test

      - name: Upload Playwright screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: frontend/test-results/
